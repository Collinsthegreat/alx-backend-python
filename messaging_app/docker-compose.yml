# version: '3.8'

# services:
  # MySQL Database Service
#  db:
#    image: mysql:8.0
#    restart: always
#    environment:
#      MYSQL_DATABASE: ${DB_NAME}
#      MYSQL_USER: ${DB_USER}
#      MYSQL_PASSWORD: ${DB_PASSWORD}
#      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
#    ports:
 #     - "3307:3306"
 #   volumes:
      # Named volume for MySQL data persistence
 #     - mysql_data:/var/lib/mysql
      # Optional: Mount custom MySQL configuration
      #- ./mysql/conf:/etc/mysql/conf.d:ro
      # Optional: Mount MySQL logs
     # - mysql_logs:/var/log/mysql
    #healthcheck:
      #test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      #timeout: 20s
      #retries: 10

  # Django Web Application Service
  #web:
    #build: .
    #restart: always
    #ports:
     # - "8000:8000"
    #environment:
     # - DEBUG=${DEBUG}
     # - SECRET_KEY=${SECRET_KEY}
     # - DB_NAME=${DB_NAME}
     # - DB_USER=${DB_USER}
     # - DB_PASSWORD=${DB_PASSWORD}
     # - DB_HOST=db
     # - DB_PORT=3306
     # - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
   # depends_on:
   #   db:
    #    condition: service_healthy
  #  volumes:
   #   - .:/app
  #  command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

#volumes:
  # Named volume for MySQL data persistence across container restarts
 # mysql_data:
  #  driver: local
  # Named volume for MySQL logs
 # mysql_logs:
 #   driver: local


version: '3.8'

services:
  # MySQL Database Service

    db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_DB: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    
    ports:
      - "3307:3306"   # Use 3307 locally to avoid conflicts
    volumes:
      - mysql_data:/var/lib/mysql  # Persistent database storage
      - ./mysql/conf:/etc/mysql/conf.d:ro  # Local custom config (optional, debugging)
      - mysql_logs:/var/log/mysql          # Local log persistence
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Web Application Service
web:
    build: .
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${MYSQL_DB}            # ✅ match .env
      - DB_USER=${MYSQL_USER}          # ✅ match .env
      - DB_PASSWORD=${MYSQL_PASSWORD}  # ✅ match .env
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - static_volume:/app/staticfiles  # Store static files
      - media_volume:/app/media         # Store media files
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python3 manage.py runserver 0.0.0.0:8000"


volumes:
  mysql_data:
  mysql_logs:
  static_volume:
  media_volume:
